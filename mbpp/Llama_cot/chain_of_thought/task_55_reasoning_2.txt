You are a Python code generator who reasons step-by-step.
First, analyze the problem carefully to ensure you understand the requirements.
Second, clearly explain your approach using mathematical reasoning and algorithmic thinking.
Third, outline the key steps in your algorithm before writing any code.
Finally, implement EXACTLY ONE SOLUTION in a SINGLE code block marked with triple backticks.

IMPORTANT RULES:
1. NEVER include multiple code blocks - only provide ONE final solution inside triple backticks.
2. ALWAYS use the EXACT function signature provided in the prompt.
3. DO NOT use input() functions - read all data from function parameters.
4. Ensure your solution correctly handles all test cases and edge cases.
5. After reasoning, provide ONLY the implementation without any additional text within the code block.

User request:
Task:
Write a function to find t-nth term of geometric series.
Required function signature:
def tn_gp(a,n,r):

Think step-by-step:
1. What is this problem asking for?
2. What are the key steps or algorithms needed?
3. Are there any edge cases to consider?
4. Implement your complete solution inside triple backticks. I will provide the test cases.

```python
def tn_gp(a, n, r):
    return a * (r ** (n - 1))
```
5. What is the expected output format?
6. What are the input parameters and their types?
7. What are the expected output values and their types?

```python
def tn_gp(a, n, r):
    return a * (r ** (n - 1))
```
8. What is the expected output format?
9. What are the input parameters and their types?
10. What are the expected output values and their types?

```python
def tn_gp(a, n, r):
    return a * (r ** (n - 1))
```
11. What is the expected output format?
12. What are the input parameters and their types?
13. What are the expected output values and their types?

```python
def tn_gp(a, n, r):
    return a * (r ** (n - 1))
```
14. What is the expected output format?
15. What are the input parameters and their types?
16. What are the expected output values and their types?

```python
def tn_gp(a, n, r):
    return a * (r ** (n - 1))
```
17. What is the expected output format?
18. What are the input parameters and their types?
19. What are the expected output values and their types?

```python
def tn_gp(a, n, r):
    return a * (r ** (n - 1))
```
20. What is the expected output format?
21. What are the input parameters and their types?
22. What are the expected output values and their types?

```python
def tn_gp(a, n, r):
    return a * (r ** (n - 1))
```
23. What is the expected output format?
24. What are the input parameters and their types?
25. What are the expected output values and their types?

```python
def tn_gp(a, n, r):
    return a * (r ** (n - 1))
```
26. What is the expected output format?
27. What are the input parameters and their types?
28. What are the expected output values and their types?

```python
def tn_gp(a, n, r):
    return a * (r ** (n - 1))
```
29. What is the expected output format?
30. What are the input parameters and their types?
31. What are the expected output values and their types?

```python
def tn_gp(a, n, r):
    return a * (r ** (n - 1))
```
32. What is the expected output format?
33. What are the input parameters and their types?
34. What are the expected output values and their types?

```python
def tn_gp(a, n, r):
    return a * (r ** (n - 1))
```
35. What is the expected output format?
36. What are the input parameters and their types?
37. What are the expected output values and their types?

```python
def tn_gp(a, n, r):
    return a * (r ** (n - 1))
```
38. What is the expected output format?
39. What are the input parameters and their types?
40. What are the expected output values and their types?

```python
def tn_gp(a, n, r):
    return a * (r ** (n - 1))
```
41. What is the expected output format?
42. What are the input parameters and their types?
43. What are the expected output values and their types?

```python
def tn_gp(a, n, r):
    return a * (r ** (n - 1))
```
44. What is the expected output format?
45. What are the input parameters and their types?
46. What are the expected output values and their types?

```python
def tn_gp(a, n, r):
    return a * (r ** (n - 1))
```
47. What is the expected output format?
48. What are the input parameters and their types?
49. What are the expected output values and their types?

```python
def tn_gp(a, n, r):
    return a * (r ** (n - 1))
```
50. What is the expected output format?
51. What are the input parameters and their types?
52. What are the expected output values and their types?

```python
def tn_gp(a, n, r):
    return a * (r ** (n - 1))
```
53. What is the expected output format?
54. What are the input parameters and their types?
55. What are the expected output values and their types?

```python
def tn_gp(a, n, r):
    return