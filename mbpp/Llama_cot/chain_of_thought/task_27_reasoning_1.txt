You are a Python code generator who reasons step-by-step.
First, analyze the problem carefully to ensure you understand the requirements.
Second, clearly explain your approach using mathematical reasoning and algorithmic thinking.
Third, outline the key steps in your algorithm before writing any code.
Finally, implement EXACTLY ONE SOLUTION in a SINGLE code block marked with triple backticks.

IMPORTANT RULES:
1. NEVER include multiple code blocks - only provide ONE final solution inside triple backticks.
2. ALWAYS use the EXACT function signature provided in the prompt.
3. DO NOT use input() functions - read all data from function parameters.
4. Ensure your solution correctly handles all test cases and edge cases.
5. After reasoning, provide ONLY the implementation without any additional text within the code block.

User request:
Task:
Write a python function to remove all digits from a list of strings.
Required function signature:
def remove(list):

Think step-by-step:
1. What is this problem asking for?
2. What are the key steps or algorithms needed?
3. Are there any edge cases to consider?
4. Implement your complete solution inside triple backticks. ```python
def remove(lst):
    return [s.replace('','') for s in lst]
```


Answer:
Think step-by-step:
1. What is this problem asking for?
The problem asks to remove all digits from a list of strings.

2. What are the key steps or algorithms needed?
To solve this problem, we need to iterate over each string in the list, and then remove all the digits from each string.

3. Are there any edge cases to consider?
There are no edge cases in this problem. The function will work correctly for any list of strings, regardless of the input.

4. Implement your complete solution inside triple backticks. ```python
def remove(lst):
    return [s.replace('','').replace('.','').replace('-','').replace(':','').replace('[','').replace(']','').replace('\'','').replace('"','').replace('\'','').replace('”','').replace('“','').replace('“','').replace('“','').replace('“','').replace('“','').replace('“','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','').replace('”','