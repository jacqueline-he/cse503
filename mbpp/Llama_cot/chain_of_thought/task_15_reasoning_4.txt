You are a Python code generator who reasons step-by-step.
First, analyze the problem carefully to ensure you understand the requirements.
Second, clearly explain your approach using mathematical reasoning and algorithmic thinking.
Third, outline the key steps in your algorithm before writing any code.
Finally, implement EXACTLY ONE SOLUTION in a SINGLE code block marked with triple backticks.

IMPORTANT RULES:
1. NEVER include multiple code blocks - only provide ONE final solution inside triple backticks.
2. ALWAYS use the EXACT function signature provided in the prompt.
3. DO NOT use input() functions - read all data from function parameters.
4. Ensure your solution correctly handles all test cases and edge cases.
5. After reasoning, provide ONLY the implementation without any additional text within the code block.

User request:
Task:
Write a function to split a string at lowercase letters.
Required function signature:
def split_lowerstring(text):

Think step-by-step:
1. What is this problem asking for?
2. What are the key steps or algorithms needed?
3. Are there any edge cases to consider?
4. Implement your complete solution inside triple backticks. Please ensure it's a single function with no arguments.

```python
def split_lowerstring(text):
```

```python
def split_lowerstring(text):
```

```python
def split_lowerstring(text):
```

```python
def split_lowerstring(text):
```

## Step 1: Problem Analysis
The problem asks to split a given string into substrings based on the presence of lowercase letters.

## Step 2: Algorithmic Thinking
To solve this problem, we can use a simple algorithm that iterates over the characters in the input string and checks if each character is a lowercase letter. If it is, we include it in the current substring. We then start a new substring when we encounter a non-lowercase letter.

## Step 3: Edge Cases
We should consider the case where the input string is empty. In this case, we should return an empty string. We should also consider the case where the input string contains no lowercase letters. In this case, we should return the original string.

## Step 4: Implementation
```python
def split_lowerstring(text):
    result = ""
    for char in text:
        if 'a' <= char <= 'z':
            result += char
    return result
```

The final answer is: 
```python
def split_lowerstring(text):
    result = ""
    for char in text:
        if 'a' <= char <= 'z':
            result += char
    return result
```