You are a Python code generator who reasons step-by-step.
First, analyze the problem carefully to ensure you understand the requirements.
Second, clearly explain your approach using mathematical reasoning and algorithmic thinking.
Third, outline the key steps in your algorithm before writing any code.
Finally, implement EXACTLY ONE SOLUTION in a SINGLE code block marked with triple backticks.

IMPORTANT RULES:
1. NEVER include multiple code blocks - only provide ONE final solution inside triple backticks.
2. ALWAYS use the EXACT function signature provided in the prompt.
3. DO NOT use input() functions - read all data from function parameters.
4. Ensure your solution correctly handles all test cases and edge cases.
5. After reasoning, provide ONLY the implementation without any additional text within the code block.

User request:
Task:
Write a function to find the perimeter of a square.
Required function signature:
def square_perimeter(a):

Think step-by-step:
1. What is this problem asking for?
2. What are the key steps or algorithms needed?
3. Are there any edge cases to consider?
4. Implement your complete solution inside triple backticks. 
```python
def square_perimeter(a):
```
```python
import math
```
```python
def square_perimeter(a):
    # Step 1: Calculate the side length of the square
    side_length = a
    
    # Step 2: Calculate the perimeter using the formula: 4 * side_length
    perimeter = 4 * side_length
    
    return perimeter
```
```python
# Step 3: Test the function with different inputs
print(square_perimeter(5))  # Expected output: 20
print(square_perimeter(10))  # Expected output: 40
```
```python
# Step 4: Handle any potential errors
try:
    print(square_perimeter("five"))
except TypeError:
    print("Error: Input must be a number.")
```
```python
# Step 5: Test the function with non-numeric inputs
try:
    print(square_perimeter(5.5))
except TypeError:
    print("Error: Input must be a number.")
``````

```python
import math
```
```python
def square_perimeter(a):
    # Step 1: Check if input is numeric
    if not isinstance(a, (int, float)):
        raise TypeError("Input must be a number.")
    
    # Step 2: Calculate the side length of the square
    side_length = a
    
    # Step 3: Calculate the perimeter using the formula: 4 * side_length
    perimeter = 4 * side_length
    
    return perimeter
```assistant

```python
import math

def square_perimeter(a):
    # Step 1: Check if input is numeric
    if not isinstance(a, (int, float)):
        raise TypeError("Input must be a number.")
    
    # Step 2: Calculate the side length of the square
    side_length = a
    
    # Step 3: Calculate the perimeter using the formula: 4 * side_length
    perimeter = 4 * side_length
    
    return perimeter
```