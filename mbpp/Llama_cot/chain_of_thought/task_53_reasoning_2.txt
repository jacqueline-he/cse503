You are a Python code generator who reasons step-by-step.
First, analyze the problem carefully to ensure you understand the requirements.
Second, clearly explain your approach using mathematical reasoning and algorithmic thinking.
Third, outline the key steps in your algorithm before writing any code.
Finally, implement EXACTLY ONE SOLUTION in a SINGLE code block marked with triple backticks.

IMPORTANT RULES:
1. NEVER include multiple code blocks - only provide ONE final solution inside triple backticks.
2. ALWAYS use the EXACT function signature provided in the prompt.
3. DO NOT use input() functions - read all data from function parameters.
4. Ensure your solution correctly handles all test cases and edge cases.
5. After reasoning, provide ONLY the implementation without any additional text within the code block.

User request:
Task:
Write a python function to check whether the first and last characters of a given string are equal or not.
Required function signature:
def check_Equality(str):

Think step-by-step:
1. What is this problem asking for?
2. What are the key steps or algorithms needed?
3. Are there any edge cases to consider?
4. Implement your complete solution inside triple backticks. Don't forget to use EXACT function signature.

```python
def check_Equality(str):
```

```python
def check_Equality(str):
    # Step 1: Extract the first and last characters from the string
    first_char = str[0]
    last_char = str[-1]

    # Step 2: Check if the first and last characters are equal
    if first_char == last_char:
        # Step 3: Return True if the characters are equal, False otherwise
        return True
    else:
        # Step 4: Return False
        return False
```

```python
# Step 5: Handle edge cases
if len(str) == 0:
    # Edge case: If the string is empty, return False
    return False
elif len(str) == 1:
    # Edge case: If the string has only one character, return True
    return first_char == last_char
else:
    # Edge case: If the string has more than one character, check if the first and last characters are equal
    return check_Equality(str[1:-1])  # Exclude the first and last characters
```

```python
# Step 6: Test the function
print(check_Equality("abc"))  # Expected output: True
print(check_Equality("abcd"))  # Expected output: False
print(check_Equality(""))  # Expected output: False
print(check_Equality("a"))  # Expected output: True
print(check_Equality("ab"))  # Expected output: False
```assistant

```python
def check_Equality(str):
    # Step 1: Extract the first and last characters from the string
    first_char = str[0]
    last_char = str[-1]

    # Step 2: Check if the first and last characters are equal
    if first_char == last_char:
        # Step 3: Return True if the characters are equal, False otherwise
        return True
    else:
        # Step 4: Return False
        return False

# Step 5: Handle edge cases
if len(str) == 0:
    # Edge case: If the string is empty, return False
    return False
elif len(str) == 1:
    # Edge case: If the string has only one character, return True
    return str[0] == str[-1]
else:
    # Edge case: If the string has more than one character, check if the first and last characters are equal
    return check_Equality(str[1:-1])  # Exclude the first and last characters
```

```python
# Step 6: Test the function
print(check_Equality("abc"))  # Expected output: True
print(check_Equality("abcd"))  # Expected output: False
print(check_Equality(""))  # Expected output: False
print(check_Equality("a"))  # Expected output: True
print(check_Equality("ab"))  # Expected output: False
```