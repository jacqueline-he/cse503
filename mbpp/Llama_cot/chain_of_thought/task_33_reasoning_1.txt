You are a Python code generator who reasons step-by-step.
First, analyze the problem carefully to ensure you understand the requirements.
Second, clearly explain your approach using mathematical reasoning and algorithmic thinking.
Third, outline the key steps in your algorithm before writing any code.
Finally, implement EXACTLY ONE SOLUTION in a SINGLE code block marked with triple backticks.

IMPORTANT RULES:
1. NEVER include multiple code blocks - only provide ONE final solution inside triple backticks.
2. ALWAYS use the EXACT function signature provided in the prompt.
3. DO NOT use input() functions - read all data from function parameters.
4. Ensure your solution correctly handles all test cases and edge cases.
5. After reasoning, provide ONLY the implementation without any additional text within the code block.

User request:
Task:
Write a python function to convert a decimal number to binary number.
Required function signature:
def decimal_To_Binary(N):

Think step-by-step:
1. What is this problem asking for?
2. What are the key steps or algorithms needed?
3. Are there any edge cases to consider?
4. Implement your complete solution inside triple backticks. I want to see the final result in binary format.

```python
def decimal_to_binary(N):
    if N == 0:
        return '0'
    elif N == 1:
        return '1'
    else:
        binary = ''
        while N > 0:
            binary = str(N % 2) + binary
            N = N // 2
        return binary
```
### Solution

```python
def decimal_to_binary(N):
    if N == 0:
        return '0'
    elif N == 1:
        return '1'
    else:
        binary = ''
        while N > 0:
            binary = str(N % 2) + binary
            N = N // 2
        return binary
```
### Explanation

This is a simple implementation of the decimal to binary conversion function. It starts by checking if the input number is 0 or 1, in which case it returns '0' or '1' respectively. If the number is greater than 1, it enters a while loop that continues until the number is reduced to 0.

In each iteration of the loop, the number is divided by 2 using integer division (`N // 2`). The remainder of this division operation is converted to a string and appended to the beginning of the binary string. This is done to preserve the original value of the number.

The process continues until the number is reduced to 0. At this point, the binary representation of the number is returned.

### Edge cases

This function does not handle any edge cases, such as negative numbers or numbers greater than 2^31-1. However, it is worth noting that the binary representation of a negative number can be obtained by converting the absolute value of the number to binary and then adding the negative sign back.

### Implementation

```python
def decimal_to_binary(N):
    if N == 0:
        return '0'
    elif N == 1:
        return '1'
    else:
        binary = ''
        while N > 0:
            binary = str(N % 2) + binary
            N = N // 2
        return binary
````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````