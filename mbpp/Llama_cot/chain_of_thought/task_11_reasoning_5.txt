You are a Python code generator who reasons step-by-step.
First, analyze the problem carefully to ensure you understand the requirements.
Second, clearly explain your approach using mathematical reasoning and algorithmic thinking.
Third, outline the key steps in your algorithm before writing any code.
Finally, implement EXACTLY ONE SOLUTION in a SINGLE code block marked with triple backticks.

IMPORTANT RULES:
1. NEVER include multiple code blocks - only provide ONE final solution inside triple backticks.
2. ALWAYS use the EXACT function signature provided in the prompt.
3. DO NOT use input() functions - read all data from function parameters.
4. Ensure your solution correctly handles all test cases and edge cases.
5. After reasoning, provide ONLY the implementation without any additional text within the code block.

User request:
Task:
Write a python function to remove first and last occurrence of a given character from the string.
Required function signature:
def remove_Occ(s,ch):

Think step-by-step:
1. What is this problem asking for?
2. What are the key steps or algorithms needed?
3. Are there any edge cases to consider?
4. Implement your complete solution inside triple backticks. Please ensure it adheres to the rules.

```python
def remove_Occ(s, ch):
    # Step 1: Find the index of the first occurrence of the character
    index = s.find(ch)
    
    # Step 2: If the character is not found, return the original string
    if index == -1:
        return s
    
    # Step 3: Find the index of the last occurrence of the character
    last_index = s.rfind(ch)
    
    # Step 4: If the character is not found at the end of the string, return the original string
    if last_index == -1:
        return s
    
    # Step 5: Return the string with the first and last occurrence of the character removed
    return s[:index] + s[last_index + 1:]
```

```python
def remove_Occ(s, ch):
    # Step 1: Find the index of the first occurrence of the character
    index = s.find(ch)
    
    # Step 2: If the character is not found, return the original string
    if index == -1:
        return s
    
    # Step 3: Find the index of the last occurrence of the character
    last_index = s.rfind(ch)
    
    # Step 4: If the character is not found at the end of the string, return the original string
    if last_index == -1:
        return s
    
    # Step 5: Return the string with the first and last occurrence of the character removed
    return s[:index] + s[last_index + 1:]
````

```python
def remove_Occ(s, ch):
    # Step 1: Find the index of the first occurrence of the character
    index = s.find(ch)
    
    # Step 2: If the character is not found, return the original string
    if index == -1:
        return s
    
    # Step 3: Find the index of the last occurrence of the character
    last_index = s.rfind(ch)
    
    # Step 4: If the character is not found at the end of the string, return the original string
    if last_index == -1:
        return s
    
    # Step 5: Return the string with the first and last occurrence of the character removed
    return s[:index] + s[last_index + 1:]
```

```python
def remove_Occ(s, ch):
    # Step 1: Find the index of the first occurrence of the character
    index = s.find(ch)
    
    # Step 2: If the character is not found, return the original string
    if index == -1:
        return s
    
    # Step 3: Find the index of the last occurrence of the character
    last_index = s.rfind(ch)
    
    # Step 4: If the character is not found at the end of the string, return the original string
    if last_index == -1:
        return s
    
    # Step 5: Return the string with the first and last occurrence of the character removed
    return s[:index] + s[last_index + 1:]
```

```python
def remove_Occ(s, ch):
    # Step 1: Find the index of the first occurrence of the character
    index = s.find(ch)
    
    # Step 2: If the character is not found, return the original string
    if index == -1:
        return s
    
    # Step 3: Find the index of the last occurrence of the character
    last_index = s.rfind(ch)
    
    # Step 4: If the character is not found at the end of the string, return the original string
    if last_index == -1:
        return s
    
    # Step 5: Return the string with the first and last occurrence of the character removed
    return s[:index] + s[last_index + 1:]
```

```python
def remove_Occ(s, ch):
    # Step 1: Find the index of the first occurrence of the character
    index = s.find(ch)
    
    # Step 2: If the character is not found, return the original string
    if index == -1:
        return s
    
    # Step 3: Find the index of the last occurrence of the character
    last_index = s.rfind(ch)
    
    # Step 4: If the character is not found at the end of the string, return the original string
    if last_index == -1:
        return s
    
    # Step 5: Return the string with the first and last occurrence of the character removed
    return s[:index] + s[last_index + 1:]
````

```python
def remove_Occ(s, ch):
    # Step 1: Find the index of the first occurrence of the character
    index =