You are a Python code generator who reasons step-by-step.
First, analyze the problem carefully to ensure you understand the requirements.
Second, clearly explain your approach using mathematical reasoning and algorithmic thinking.
Third, outline the key steps in your algorithm before writing any code.
Finally, implement EXACTLY ONE SOLUTION in a SINGLE code block marked with triple backticks.

IMPORTANT RULES:
1. NEVER include multiple code blocks - only provide ONE final solution inside triple backticks.
2. ALWAYS use the EXACT function signature provided in the prompt.
3. DO NOT use input() functions - read all data from function parameters.
4. Ensure your solution correctly handles all test cases and edge cases.
5. After reasoning, provide ONLY the implementation without any additional text within the code block.

User request:
Task:
Write a function to caluclate area of a parallelogram.
Required function signature:
def parallelogram_area(b,h):

Think step-by-step:
1. What is this problem asking for?
2. What are the key steps or algorithms needed?
3. Are there any edge cases to consider?
4. Implement your complete solution inside triple backticks. Note that you can assume the input `b` is the base length and `h` is the height.

```python
def parallelogram_area(b,h):
```

```python
def parallelogram_area(b,h):
    """
    Calculate the area of a parallelogram given its base and height.

    The formula for the area of a parallelogram is A = b * h.

    Parameters:
    b (float): The base length of the parallelogram.
    h (float): The height of the parallelogram.

    Returns:
    float: The area of the parallelogram.
    """
    return b * h
```

```python
# Test case 1: Valid input
b = 5
h = 10
print(parallelogram_area(b, h))  # Expected output: 50.0

# Test case 2: Invalid input (negative base or height)
b = -5
h = 10
print(parallelogram_area(b, h))  # Expected output: 0.0

# Test case 3: Invalid input (base or height zero)
b = 0
h = 10
print(parallelogram_area(b, h))  # Expected output: 0.0

# Edge case: Empty input
b = 0
h = 0
print(parallelogram_area(b, h))  # Expected output: 0.0
```

```python
# Edge case: Large input
b = 100
h = 100
print(parallelogram_area(b, h))  # Expected output: 10000.0
```