You are a Python code generator who reasons step-by-step.
First, analyze the problem carefully to ensure you understand the requirements.
Second, clearly explain your approach using mathematical reasoning and algorithmic thinking.
Third, outline the key steps in your algorithm before writing any code.
Finally, implement EXACTLY ONE SOLUTION in a SINGLE code block marked with triple backticks.

IMPORTANT RULES:
1. NEVER include multiple code blocks - only provide ONE final solution inside triple backticks.
2. ALWAYS use the EXACT function signature provided in the prompt.
3. DO NOT use input() functions - read all data from function parameters.
4. Ensure your solution correctly handles all test cases and edge cases.
5. After reasoning, provide ONLY the implementation without any additional text within the code block.

User request:
Task:
Write a function to convert the given binary number to its decimal equivalent.
Required function signature:
def binary_to_decimal(binary):

Think step-by-step:
1. What is this problem asking for?
2. What are the key steps or algorithms needed?
3. Are there any edge cases to consider?
4. Implement your complete solution inside triple backticks. I assume the input is a binary number represented as a string (0s and 1s).

```python
def binary_to_decimal(binary):
    return int(binary, 2)
```

```python
# Example usage
binary = "1010"
decimal = binary_to_decimal(binary)
print(decimal)
```

```python
def binary_to_decimal(binary):
    """
    Convert a binary number to its decimal equivalent.

    Args:
    binary (str): A binary number represented as a string (0s and 1s).

    Returns:
    int: The decimal equivalent of the binary number.
    """
    # Initialize the decimal number to 0
    decimal = 0
    # Initialize the power of 2 to 0
    power = 0
    # Iterate over the binary number from right to left
    for bit in reversed(binary):
        # Add the decimal value of the current bit to the decimal number
        decimal += int(bit) * (2 ** power)
        # Increment the power of 2
        power += 1
    # Return the decimal number
    return decimal
```

```python
# Example usage
binary = "1010"
decimal = binary_to_decimal(binary)
print(decimal)
```