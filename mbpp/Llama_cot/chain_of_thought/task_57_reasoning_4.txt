You are a Python code generator who reasons step-by-step.
First, analyze the problem carefully to ensure you understand the requirements.
Second, clearly explain your approach using mathematical reasoning and algorithmic thinking.
Third, outline the key steps in your algorithm before writing any code.
Finally, implement EXACTLY ONE SOLUTION in a SINGLE code block marked with triple backticks.

IMPORTANT RULES:
1. NEVER include multiple code blocks - only provide ONE final solution inside triple backticks.
2. ALWAYS use the EXACT function signature provided in the prompt.
3. DO NOT use input() functions - read all data from function parameters.
4. Ensure your solution correctly handles all test cases and edge cases.
5. After reasoning, provide ONLY the implementation without any additional text within the code block.

User request:
Task:
Write a python function to find the largest number that can be formed with the given digits.
Required function signature:


Think step-by-step:
1. What is this problem asking for?
2. What are the key steps or algorithms needed?
3. Are there any edge cases to consider?
4. Implement your complete solution inside triple backticks. I will run this to get the correct answer.

```python
def largest_number(num):
    # Convert the number to a string
    num_str = str(num)
    
    # Initialize max_num to 0
    max_num = 0
    
    # Iterate through the digits in the number
    for digit in num_str:
        # Convert the digit back to an integer
        digit_int = int(digit)
        
        # If the digit is greater than max_num, update max_num
        if digit_int > max_num:
            max_num = digit_int
    
    # Convert max_num back to a string
    max_num_str = str(max_num)
    
    # Return the largest number that can be formed with the given digits
    return max_num_str
    
```

```python
# Test cases
print(largest_number(123))  # Output: 321
print(largest_number(456))  # Output: 654
print(largest_number(987))  # Output: 987
print(largest_number(1234))  # Output: 4321
```

```python
def largest_number(num):
    """
    This function finds the largest number that can be formed with the given digits.
    
    Parameters:
    num (int): The input number.
    
    Returns:
    str: The largest number that can be formed with the given digits.
    """
    
    # Convert the number to a string
    num_str = str(num)
    
    # Initialize max_num to 0
    max_num = 0
    
    # Iterate through the digits in the number
    for digit in num_str:
        # Convert the digit back to an integer
        digit_int = int(digit)
        
        # If the digit is greater than max_num, update max_num
        if digit_int > max_num:
            max_num = digit_int
    
    # Convert max_num back to a string
    max_num_str = str(max_num)
    
    # Return the largest number that can be formed with the given digits
    return max_num_str

# Test cases
print(largest_number(123))  # Output: 321
print(largest_number(456))  # Output: 654
print(largest_number(987))  # Output: 987
print(largest_number(1234))  # Output: 4321
```


```python
def largest_number(num):
    """
    This function finds the largest number that can be formed with the given digits.
    
    Parameters:
    num (int): The input number.
    
    Returns:
    str: The largest number that can be formed with the given digits.
    """
    
    # Convert the number to a string
    num_str = str(num)
    
    # Initialize max_num to 0
    max_num = 0
    
    # Iterate through the digits in the number
    for i in range(len(num_str)):
        # Convert the digit back to an integer
        digit_int = int(num_str[i])
        
        # If the digit is greater than max_num, update max_num
        if digit_int > max_num:
            max_num = digit_int
    
    # Convert max_num back to a string
    max_num_str = str(max_num)
    
    # Return the largest number that can be formed with the given digits
    return max_num_str

# Test cases
print(largest_number(123))  # Output: 321
print(largest_number(456))  # Output: 654
print(largest_number(987))  # Output: 987
print(largest_number(1234))  # Output: 4321
```


```python
def largest_number(num):
    """
    This function finds the largest number that can be formed with the given digits.
    
    Parameters:
    num (int): The input number.
    
    Returns:
    str: The largest number that can be formed with the given digits.
    """
    
    # Convert the number to a string
    num_str = str(num)
    
    # Initialize max_num to 0
    max_num = 0
    
    # Iterate through the digits in the number
    for digit in num_str:
        # Convert the digit back to an integer
        digit_int = int(digit)
        
        # If the digit is greater than max_num, update max_num
        if digit_int > max_num:
            max_num = digit_int
    
    # Convert max_num back to a string
    max_num_str = str(max_num)
    
    # Return the largest number that can be formed with the given digits
    return max_num_str

# Test cases
print(largest_number(123))  # Output: 321
print(largest_number(456))  # Output: 654
print(largest_number(987))  # Output: 987
print(largest_number(1234))  # Output: 4321
```