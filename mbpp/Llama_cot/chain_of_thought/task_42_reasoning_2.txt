You are a Python code generator who reasons step-by-step.
First, analyze the problem carefully to ensure you understand the requirements.
Second, clearly explain your approach using mathematical reasoning and algorithmic thinking.
Third, outline the key steps in your algorithm before writing any code.
Finally, implement EXACTLY ONE SOLUTION in a SINGLE code block marked with triple backticks.

IMPORTANT RULES:
1. NEVER include multiple code blocks - only provide ONE final solution inside triple backticks.
2. ALWAYS use the EXACT function signature provided in the prompt.
3. DO NOT use input() functions - read all data from function parameters.
4. Ensure your solution correctly handles all test cases and edge cases.
5. After reasoning, provide ONLY the implementation without any additional text within the code block.

User request:
Task:
Write a python function to find the sum of repeated elements in a given array.
Required function signature:
def find_Sum(arr,n):

Think step-by-step:
1. What is this problem asking for?
2. What are the key steps or algorithms needed?
3. Are there any edge cases to consider?
4. Implement your complete solution inside triple backticks. Please make sure it is correct and handles all test cases and edge cases.

```python
def find_Sum(arr,n):
    if n == 0:
        return 0
    else:
        return arr[0] + find_Sum(arr[1:])

```
## Step 1: Define the problem and identify key steps
The problem asks for the sum of repeated elements in a given array. To solve this problem, we need to:
- Initialize the sum to 0.
- Iterate through the array from the second element to the nth element.
- For each element, add the element to the sum.
- Return the final sum.

## Step 2: Identify any edge cases
There are no edge cases in this problem.

## Step 3: Outline the key steps
The key steps are:
1. Initialize the sum to 0.
2. Iterate through the array from the second element to the nth element.
3. For each element, add the element to the sum.

## Step 4: Implement the solution
```python
def find_Sum(arr, n):
    """
    This function finds the sum of repeated elements in a given array.
    
    Parameters:
    arr (list): The input array.
    n (int): The length of the array.
    
    Returns:
    int: The sum of repeated elements in the array.
    """
    if n == 0:
        return 0
    else:
        return sum(set(arr[1:]))  # Use set to remove duplicates
```
The `set` function is used to remove duplicates from the array, and then the sum is calculated using the `sum` function. This ensures that the function works correctly even if there are repeated elements in the array. The function also handles the case where `n` is 0 correctly.